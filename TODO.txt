
TODO:

// Higher priority tasks towards top.
// Formatting is:
// - Task type
//	   - Sub task or description 1
//	   - Sub task or description 2
//	   ( files, if any )


- Add descriptor set data updates to an actual Vulkan buffer
	( Camera.cpp, Shape.cpp )

- Add descriptor set allocation for pipelines
	( DeviceResource_GraphicsPipeline.cpp )

- Add uniform buffer objects for pipelines
	( DeviceResource_GraphicsPipeline.cpp )

- Create an API that allows easier command buffer recording on initialization stage of the scene node

- Enable actually drawing something
	- Add proper values to the Vulkan render pass object
	- Add rendering into G-buffers
	- Add render pass from G-buffers to final render
	- Pass final image to swapchain

- Modify scene hierarchy
	- A scene depends on SceneBase, it shouldn't depend on all of it
	- Create a SceneCommon base instead and move most of the SceneBase functionality into SceneNode
	( SceneBase.h/cpp, SceneNode.h/cpp, <create file for SceneNodeHierarchy class> )
